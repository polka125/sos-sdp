real N, Ns;
function minSort[1, 2], findMin[1, 1];

if { N == 0 } => {minSort(N) >= 1 + findMin(N)}
if { N == 0 } => {minSort(N) <= 1 + findMin(N)}

if { N >= 1; Ns == N - 1} => {minSort(N) >= 1 + findMin(N) + minSort(Ns)}
if { N >= 1; Ns == N - 1} => {minSort(N) <= 1 + findMin(N) + minSort(Ns)}

if { N == 0 } => {findMin(N) >= 1}
if { N == 0 } => {findMin(N) <= 1}

if { N >= 1; Ns == N - 1 } => { findMin(N) >= 1 + findMin(Ns) }
if { N >= 1; Ns == N - 1 } => { findMin(N) <= 1 + findMin(Ns) }


// eq(minSort(N),1,[findMin(N)],[N=0]).
// eq(minSort(N),1,[findMin(N),minSort(Ns)],[N>=1,Ns=N-1]).
// eq(findMin(N),1,[],[N=0]).
// eq(findMin(N),1,[findMin(Ns)],[N>=1,Ns=N-1]).
